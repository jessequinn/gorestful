version: '3.7'

services:
    mongo1:
        hostname: mongo1
        container_name: chapter5_mongo1
        image: mongo:4.2.2-bionic
        restart: unless-stopped
        environment:
            MONGO_INITDB_ROOT_USERNAME: root
            MONGO_INITDB_ROOT_PASSWORD: password
            MONGO_INITDB_DATABASE: admin
        expose:
            - 27017
        ports:
            - 27017:27017
        volumes:
            - ./docker/mongo/root:/root:ro
        entrypoint: [ "/usr/bin/mongod", "--bind_ip_all", "--replSet", "rs0" ]
        depends_on:
          - mongo2
          - mongo3
        
    mongo2:
        hostname: mongo2
        container_name: chapter5_mongo2
        image: mongo:4.2.2-bionic
        restart: unless-stopped
        expose:
            - 27017
        ports:
            - 27018:27017
        entrypoint: [ "/usr/bin/mongod", "--bind_ip_all", "--replSet", "rs0" ]
        depends_on:
          - mongo3

    mongo3:
        hostname: mongo3
        container_name: chapter5_mongo3
        image: mongo:4.2.2-bionic
        restart: unless-stopped
        expose:
            - 27017
        ports:
            - 27019:27017
        entrypoint: [ "/usr/bin/mongod", "--bind_ip_all", "--replSet", "rs0" ]

    mongo-express:
        container_name: chapter5_mongo_express
        image: mongo-express:0.49.0
        restart: unless-stopped
        ports:
            - 8081:8081
        environment:
            ME_CONFIG_MONGODB_SERVER: 'mongo1,mongo2,mongo3'
            ME_CONFIG_MONGODB_ADMINUSERNAME: root
            ME_CONFIG_MONGODB_ADMINPASSWORD: password
        depends_on:
          - mongo1
          - mongo2
          - mongo3

    app:
        container_name: chapter5_app
        build:
          context: ./
          dockerfile: ./docker/app/dev.Dockerfile
        restart: unless-stopped
        depends_on:
          - mongo1
          - mongo2
          - mongo3
        ports:
        - "8000:8000"
